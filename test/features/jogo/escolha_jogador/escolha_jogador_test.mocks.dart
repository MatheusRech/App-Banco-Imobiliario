// Mocks generated by Mockito 5.4.4 from annotations
// in rech_mobile_app_banco_imobiliario/test/features/jogo/escolha_jogador/escolha_jogador_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'package:mobx/mobx.dart' as _i6;
import 'package:mockito/mockito.dart' as _i1;
import 'package:rech_mobile_app_banco_imobiliario/app/features/configuracao/configuracao.controller.dart'
    as _i3;
import 'package:rech_mobile_app_banco_imobiliario/app/features/jogadores/jogadores.controller.dart'
    as _i2;
import 'package:rech_mobile_app_banco_imobiliario/app/features/jogo/jogo.controller.dart'
    as _i7;
import 'package:rech_mobile_app_banco_imobiliario/app/features/jogo/resultado/resultado.controller.dart'
    as _i4;
import 'package:rech_mobile_app_banco_imobiliario/app/models/jogador.dart'
    as _i5;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeJogadoresController_0 extends _i1.SmartFake
    implements _i2.JogadoresController {
  _FakeJogadoresController_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeConfiguracaoController_1 extends _i1.SmartFake
    implements _i3.ConfiguracaoController {
  _FakeConfiguracaoController_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeResultadoController_2 extends _i1.SmartFake
    implements _i4.ResultadoController {
  _FakeResultadoController_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeJogador_3 extends _i1.SmartFake implements _i5.Jogador {
  _FakeJogador_3(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeReactiveContext_4 extends _i1.SmartFake
    implements _i6.ReactiveContext {
  _FakeReactiveContext_4(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [JogoController].
///
/// See the documentation for Mockito's code generation for more information.
class MockJogoController extends _i1.Mock implements _i7.JogoController {
  @override
  _i2.JogadoresController get jogadoresController => (super.noSuchMethod(
        Invocation.getter(#jogadoresController),
        returnValue: _FakeJogadoresController_0(
          this,
          Invocation.getter(#jogadoresController),
        ),
        returnValueForMissingStub: _FakeJogadoresController_0(
          this,
          Invocation.getter(#jogadoresController),
        ),
      ) as _i2.JogadoresController);

  @override
  _i3.ConfiguracaoController get configuracaoController => (super.noSuchMethod(
        Invocation.getter(#configuracaoController),
        returnValue: _FakeConfiguracaoController_1(
          this,
          Invocation.getter(#configuracaoController),
        ),
        returnValueForMissingStub: _FakeConfiguracaoController_1(
          this,
          Invocation.getter(#configuracaoController),
        ),
      ) as _i3.ConfiguracaoController);

  @override
  _i4.ResultadoController get resultadoController => (super.noSuchMethod(
        Invocation.getter(#resultadoController),
        returnValue: _FakeResultadoController_2(
          this,
          Invocation.getter(#resultadoController),
        ),
        returnValueForMissingStub: _FakeResultadoController_2(
          this,
          Invocation.getter(#resultadoController),
        ),
      ) as _i4.ResultadoController);

  @override
  List<_i5.Jogador> get jogadores => (super.noSuchMethod(
        Invocation.getter(#jogadores),
        returnValue: <_i5.Jogador>[],
        returnValueForMissingStub: <_i5.Jogador>[],
      ) as List<_i5.Jogador>);

  @override
  _i5.Jogador get jogadorJogando => (super.noSuchMethod(
        Invocation.getter(#jogadorJogando),
        returnValue: _FakeJogador_3(
          this,
          Invocation.getter(#jogadorJogando),
        ),
        returnValueForMissingStub: _FakeJogador_3(
          this,
          Invocation.getter(#jogadorJogando),
        ),
      ) as _i5.Jogador);

  @override
  _i6.ReactiveContext get context => (super.noSuchMethod(
        Invocation.getter(#context),
        returnValue: _FakeReactiveContext_4(
          this,
          Invocation.getter(#context),
        ),
        returnValueForMissingStub: _FakeReactiveContext_4(
          this,
          Invocation.getter(#context),
        ),
      ) as _i6.ReactiveContext);

  @override
  void iniciarJogo() => super.noSuchMethod(
        Invocation.method(
          #iniciarJogo,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void definirJogadorJogando(_i5.Jogador? jogador) => super.noSuchMethod(
        Invocation.method(
          #definirJogadorJogando,
          [jogador],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void encerrarJogo() => super.noSuchMethod(
        Invocation.method(
          #encerrarJogo,
          [],
        ),
        returnValueForMissingStub: null,
      );
}
